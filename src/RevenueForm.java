/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import static java.lang.reflect.Array.set;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wongx
 */
public class RevenueForm extends javax.swing.JFrame {
    private DefaultTableModel model1 = new DefaultTableModel();
    private DefaultTableModel model2 = new DefaultTableModel();
    private DefaultTableModel model3 = new DefaultTableModel();
    
    private String[] columNameday = {"Revenue ID", "Date", "Income"};
    private String[] columNamemonth = {"Month", "Total Income"};
    private String[] columNameyear = {"Year", "Total Income"};

    List<String> august = new ArrayList<>();
    List<String> september = new ArrayList<>();
    List<String> october = new ArrayList<>();
    List<String> november = new ArrayList<>();
    List<String> december = new ArrayList<>();

    List<Integer> incomeList = new ArrayList<>();
    List<Integer> monthList = new ArrayList<>();
                    
    private String vendorname;
    private String revenueid;
    private String revenuedate;
    private String revenueincome;
    private String year;
    private String month;
    private String monthlyincome;
    private String yearlyincome;
    
    private double income1 = 0, income2 = 0, income3 = 0, income4 = 0, income5 = 0, income6 = 0,
            income7 = 0, income8 = 0, income9 = 0, income10 = 0, income11 = 0, income12 = 0;

    private String filepath = "Revenue"+vendorname+".txt";
    
    public RevenueForm() {
        initComponents();
        model1.setColumnIdentifiers(columNameday);
        model2.setColumnIdentifiers(columNamemonth);
        model3.setColumnIdentifiers(columNameyear);
        //test
        clearTable();
        String filepath2 = "Revenue"+vendorname+".txt";
        System.out.println(filepath2);
        ReadFileDay(filepath2);
        ReadFileMonth(filepath2);
        ReadFileYear(filepath2);
        

        
    }
    public RevenueForm(String vendorname) {
        setVisible(true);
        setTitle("Vendor Revenue");
        this.vendorname = vendorname;
        initComponents();
        model1.setColumnIdentifiers(columNameday);
        model2.setColumnIdentifiers(columNamemonth);
        model3.setColumnIdentifiers(columNameyear);
        //test
        clearTable();
        String filepath2 = "Revenue"+vendorname+".txt";
        System.out.println(filepath2);
        ReadFileDay(filepath2);
        ReadFileMonth(filepath2);
        ReadFileYear(filepath2);
        

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        brefresh = new javax.swing.JButton();
        Tab = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableDay = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableMonthly = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableYearly = new javax.swing.JTable();
        breturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        brefresh.setText("Refresh");
        brefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brefreshActionPerformed(evt);
            }
        });

        TableDay.setModel(model1);
        jScrollPane4.setViewportView(TableDay);

        Tab.addTab("Daily", jScrollPane4);

        TableMonthly.setModel(model2);
        jScrollPane2.setViewportView(TableMonthly);

        Tab.addTab("Monthly", jScrollPane2);

        TableYearly.setModel(model3);
        jScrollPane3.setViewportView(TableYearly);

        Tab.addTab("Yearly", jScrollPane3);

        breturn.setText("Return to Main Page");
        breturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(brefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(breturn)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(breturn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brefresh)
                        .addGap(251, 251, 251))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(42, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void brefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brefreshActionPerformed
        // TODO add your handling code here:
        //CurrentDate cd = new CurrentDate();
        //test
        clearTable();
        
        ReadFileDay(filepath);
        ReadFileMonth(filepath);
        ReadFileYear(filepath);
        
    }//GEN-LAST:event_brefreshActionPerformed

    private void breturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breturnActionPerformed
        MainMenuVendorForm vf = new MainMenuVendorForm(vendorname);
        vf.setVisible(true);
        this.dispose();    }//GEN-LAST:event_breturnActionPerformed

    /**
     * @param args the command line arguments
     */

    private void ReadFileMonth(String filepath){
    String[] values = {month, monthlyincome};
    
    income1 = 0;
    income2 = 0;
    income3 = 0;
    income4 = 0;
    income5 = 0;
    income6 = 0;
    income7 = 0;
    income8 = 0;
    income9 = 0;
    income10 = 0;
    income11 = 0;
    income12 = 0;

    
    try {
        FileReader fr = new FileReader(filepath);
        BufferedReader br = new BufferedReader(fr);
        String line;
        while ((line = br.readLine()) != null) {
            String[] split_line = line.split(":");
            for (int i = 0; i < split_line.length; i=i+3) {
                values[i] = split_line[1].trim();
                //System.out.println("values[i]:" + values[i]);
                
                double income = Double.parseDouble(split_line[2].trim());
                String rowMonth = values[i].split("-")[1];
                int month = Integer.parseInt(rowMonth);

                switch (month)  {
                case 1:
                    income1 += income;
                    break;
                case 2:
                    income2 += income;
                    break;
                case 3:
                    income3 += income;
                    break;
                case 4:
                    income4 += income;
                    break;
                case 5:
                    income5 += income;
                    break;
                case 6:
                    income6 += income;
                    break;
                case 7:
                    income7 += income;
                    break;
                case 8:
                    income8 += income;
                    break;
                case 9:
                    income9 += income;
                    break;
                case 10:
                    income10 += income;
                    break;
                case 11:
                    income11 += income;
                    break;
                case 12:
                    income12 += income;
                    break;
                default:
                    break;
                }
            }        
        }
        List<Object> rowDataList = new ArrayList<>();
        rowDataList.add("January");
        rowDataList.add(income1);
        rowDataList.add("February");
        rowDataList.add(income2);
        rowDataList.add("March");
        rowDataList.add(income3);
        rowDataList.add("April");
        rowDataList.add(income4);
        rowDataList.add("May");
        rowDataList.add(income5);
        rowDataList.add("June");
        rowDataList.add(income6);
        rowDataList.add("July");
        rowDataList.add(income7);
        rowDataList.add("August");
        rowDataList.add(income8);
        rowDataList.add("September");
        rowDataList.add(income9);
        rowDataList.add("October");
        rowDataList.add(income10);
        rowDataList.add("November");
        rowDataList.add(income11);
        rowDataList.add("December");
        rowDataList.add(income12);

        for (int i = 0; i < rowDataList.size(); i += 2) {
            Object[] row = {rowDataList.get(i), rowDataList.get(i + 1)};
            model2.addRow(row);
        }
        br.close();
    } catch (IOException e) {
        System.err.println("An error occurred while reading the file: " + e.getMessage());
    }
    }
    
    private void ReadFileYear(String filepath){
    String[] values = {year, yearlyincome};
    
    income1 = 0;
    income2 = 0;
    income3 = 0;
    income4 = 0;
    income5 = 0;
    
    
    try {
        FileReader fr = new FileReader(filepath);
        BufferedReader br = new BufferedReader(fr);
        String line;
        while ((line = br.readLine()) != null) {
            String[] split_line = line.split(":");
            
            
            for (int i = 0; i < split_line.length; i=i+3) {
                values[i] = split_line[1].trim();
                //System.out.println("values[i]:" + values[i]);
                String date = values[i];
                //System.out.println("date" + date);
                String[] split_date = date.split("-");
                
                double income = Double.parseDouble(split_line[2].trim());
                //System.out.println("income" + income);
                
                int year = Integer.valueOf(split_date[2].trim());

                //System.out.println("year" + year);
                switch (year)  {
                case 2021:
                    income1 += income;
                    break;
                case 2022:
                    income2 += income;
                    break;
                case 2023:
                    income3 += income;
                    break;
                case 2024:
                    income4 += income;
                    break;
                case 2025:
                    income5 += income;
                    break;
                default:
                    break;
                }

            }        
        }
        List<Object> rowDataList = new ArrayList<>();
        rowDataList.add("2021");
        rowDataList.add(income1);
        rowDataList.add("2022");
        rowDataList.add(income2);
        rowDataList.add("2023");
        rowDataList.add(income3);
        rowDataList.add("2024");
        rowDataList.add(income4);
        rowDataList.add("2025");
        rowDataList.add(income5);


        for (int i = 0; i < rowDataList.size(); i += 2) {
            Object[] row = {rowDataList.get(i), rowDataList.get(i + 1)};
            model3.addRow(row);
        }
        br.close();
    } catch (IOException e) {
        System.err.println("An error occurred while reading the file: " + e.getMessage());
    }
    }

    private void ReadFileDay(String filepath){
        String[] values = {revenueid, revenuedate, revenueincome};

        try {
            FileReader fr = new FileReader(filepath);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                String[] split_line = line.split(":");

                for (int i = 0; i < split_line.length; i++) {
                    values[i] = split_line[i].trim();

                }
                model1.addRow(values);  
            }
            br.close();
        } catch (IOException e) {
            System.err.println("An error occurred while reading the file: " + e.getMessage());
        }
    }
    
    
    private void clearTable() {
        // Clear all rows from the table model
        while (model1.getRowCount() > 0) {
            model1.removeRow(0);
        }
        while (model2.getRowCount() > 0) {
            model2.removeRow(0);
        }
        while (model3.getRowCount() > 0) {
            model3.removeRow(0);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable TableDay;
    private javax.swing.JTable TableMonthly;
    private javax.swing.JTable TableYearly;
    private javax.swing.JButton brefresh;
    private javax.swing.JButton breturn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
